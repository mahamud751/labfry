# Nginx configuration for Labfry NestJS Backend (apilabfry)
# This file should be placed in /etc/nginx/sites-available/apilabfry

server {
    listen 8080;
    server_name apilabfry.pino7.com www.apilabfry.pino7.com;
    
    # Main API proxy
    location /api {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Backend NestJS handles all CORS configuration properly
        # No need to add CORS headers here as they conflict with backend
    }
    
    # WebSocket proxy
    location /socket.io/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket timeout settings
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://localhost:5000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Root redirect to API documentation
    location / {
        return 301 /api/docs;
    }
    
    # Logging
    access_log /var/log/nginx/apilabfry-access.log;
    error_log /var/log/nginx/apilabfry-error.log;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/apilabfry.pino7.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/apilabfry.pino7.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.apilabfry.pino7.com) {
        return 301 https://$host$request_uri;
    }

    if ($host = apilabfry.pino7.com) {
        return 301 https://$host$request_uri;
    }

    listen 8080;
    server_name apilabfry.pino7.com www.apilabfry.pino7.com;
    return 404; # managed by Certbot
}